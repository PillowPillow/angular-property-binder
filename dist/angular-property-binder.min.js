// angular-property-binder
// version: 0.1.0
// author: Gaignoux Nicolas
// generated: Mon Dec 22 2014 19:06:44 GMT+0100 (Europe de lâ€™Ouest)
// Autogenerated, do not edit. All changes will be undone.
"use strict";angular.module("PropertyBinder",[]),angular.module("PropertyBinder").provider("PropertyBinder.providers.binder",function(){this.$get=function(){var a=function(){var a=function(a){void 0===a&&(a=[]),this.properties=a instanceof Array?a:[a],this.binded=!1,this.sealed=!1,this.aliases={}};return a.prototype.from=function(a){return this._throwErrorIfAlreadyBinded(),this.from=a,this},a.prototype.to=function(a){return this._throwErrorIfAlreadyBinded(),this.to=a,this},a.prototype.as=function(a){if(void 0===a&&(a={}),a instanceof Object)this.aliases=a;else if("string"==typeof a){if(1!==this.properties.length)throw Error("Ambiguous aliases");var b=a;this.aliases={},this.aliases[this.properties[0]]=b}return this},a.prototype.seal=function(){return this.sealed=!0,this},a.prototype.unseal=function(){return this.sealed=!1,this},a.prototype.toggleSealing=function(){return this.sealed=!this.sealed,this},a.prototype.apply=function(){this._throwErrorIfAlreadyBinded();var a=this;if(this.from&&this.to&&this.properties.length>0)for(var b,c=a.properties[Symbol.iterator]();!(b=c.next()).done;)!function(){var c=b.value;Object.defineProperty(a.to,a.aliases[c]||c,{get:function(){return a.from[c]instanceof Function?a.from[c].bind(a.from):a.from[c]},set:function(b){if(a.sealed)throw Error("Trying to update a sealed property");a.from[c]=b}})}();return this.binded=!0,this},a.prototype._throwErrorIfAlreadyBinded=function(){if(this.binded)throw Error("Property already binded")},a}();return a}});var _slice=Array.prototype.slice,_applyConstructor=function(a,b){var c=Object.create(a.prototype),d=a.apply(c,b);return null==d||"object"!=typeof d&&"function"!=typeof d?c:d},_toArray=function(a){return Array.isArray(a)?a:Array.from(a)};angular.module("PropertyBinder").service("PropertyBinder.services.binder",["PropertyBinder.providers.binder",function(a){return function(){var b=_slice.call(arguments);return _applyConstructor(a,_toArray(b))}}]);